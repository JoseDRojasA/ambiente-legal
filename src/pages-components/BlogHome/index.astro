---
import { getCollection, type CollectionEntry } from "astro:content";
import Main from "@/layouts/main.astro";

const posts = (await getCollection("blog")).sort(
  (a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
    b.data.date.getTime() - a.data.date.getTime()
);
---

<Main
  content={{
    title: "Blog",
    description: "Conoce como llevar tu restaurante al siguiente nivel",
  }}
>
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <header class="text-center mb-12">
      <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
        Blog
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-300">
        Conoce como llevar tu restaurante al siguiente nivel
      </p>
    </header>

    <div class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-2 w-full">
      {
        posts.map((post) => (
          <a
            href={`/blog/${post.data.categorySlug}/${post.data.slug}`}
            class="group rounded-xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 bg-white dark:bg-gray-800 h-full flex flex-col"
          >
            <div class="p-6 flex-1 flex flex-col">
              <div class="mb-3">
                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">
                  {post.data.category}
                </span>
              </div>
              <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
                {post.data.title}
              </h2>
              <p class="text-gray-600 dark:text-gray-300 mb-4 flex-1">
                {post.data.description}
              </p>
              <div class="mt-auto pt-4 border-t border-gray-100 dark:border-gray-700">
                <div class="flex items-center text-sm text-gray-500 dark:text-gray-400">
                  <time datetime={post.data.date.toISOString()} class="mr-4">
                    {new Intl.DateTimeFormat("en-US", {
                      year: "numeric",
                      month: "short",
                      day: "numeric",
                    }).format(post.data.date)}
                  </time>
                  <span>by {post.data.author}</span>
                </div>
              </div>
            </div>
          </a>
        ))
      }
    </div>

    {
      posts.length === 0 && (
        <div class="text-center py-12">
          <p class="text-gray-500 dark:text-gray-400">
            No blog posts found. Check back later for updates!
          </p>
        </div>
      )
    }
  </div>
</Main>
